{"version":3,"sources":["todoContext.js","components/Todo.js","App.js","index.js"],"names":["todoContext","createContext","TodoProvider","props","useState","todoList","setTodoList","Provider","value","children","Todo","inputdata","setInputData","useContext","isEdit","setIsEdit","editId","setEditId","handleTodoAdd","item","id","Date","now","data","list","localStorage","setItem","JSON","stringify","useEffect","getItem","parse","className","type","placeholder","onChange","e","target","onKeyDown","event","key","handleEnterTodoAdd","style","backgroundColor","onClick","message","newTodo","newList","forEach","push","removeItem","handleModifyTodo","map","width","height","filter","handleRemoveTodo","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb26f4e1.chunk.js","sourcesContent":["import React, {useState, createContext} from \"react\";\n\n\nexport const todoContext = createContext();\n\nexport const TodoProvider = (props) =>{\n    const [todoList, setTodoList] = useState([]);\n\n    return(\n        <todoContext.Provider value={[todoList, setTodoList]}>\n            {props.children}\n        </todoContext.Provider>\n    )\n}","import React, {useContext, useState, useEffect} from 'react'\nimport \"./Todo.css\";\nimport { FaRegEdit } from \"react-icons/fa\";\nimport { RiDeleteBinLine } from \"react-icons/ri\";\nimport {todoContext} from \"../todoContext\";\n\n\nconst Todo = () => {\n\n    const [inputdata, setInputData] = useState(\"\");\n    const [todoList, setTodoList] = useContext(todoContext);\n    const [isEdit, setIsEdit] = useState(false);\n    const [editId, setEditId] = useState(\"\");\n\n    const handleTodoAdd = () =>{\n        if(inputdata){\n            const item = {\n                id: Date.now(),\n                data: inputdata\n            }\n            setTodoList([...todoList, item]);\n            const list = [...todoList, item];\n            localStorage.setItem(\"todoList\", JSON.stringify(list));\n            setInputData(\"\");\n        }\n    }\n\n    const handleEnterTodoAdd = (event) =>{\n        if(event.key === \"Enter\"){\n            handleTodoAdd();\n        }\n    }\n\n    const handleDeleteAllTodo = () =>{\n        setTodoList([]);\n        localStorage.removeItem(\"todoList\");\n    }\n\n    const handleRemoveTodo = (id) =>{\n        const newList = todoList.filter(item => item.id !== id);\n        setTodoList(newList);\n        localStorage.removeItem(\"todoList\");\n        localStorage.setItem(\"todoList\", JSON.stringify(newList));\n    }\n\n    const handleEditTodo = (message, id) =>{\n        setInputData(message);\n        setIsEdit(true);\n        setEditId(id);\n    }\n\n    const handleModifyTodo = (message, id) =>{\n        const newTodo = {\n            id: id,\n            data: message\n        }\n\n        const newList = [];\n        todoList.forEach(item =>{\n            if(item.id === id){\n                newList.push(newTodo);\n            }\n            else{\n                newList.push(item);\n            }\n        })\n\n        setTodoList(newList);\n        setIsEdit(false);\n        setEditId(\"\");\n        setInputData(\"\");\n        localStorage.removeItem(\"todoList\");\n        localStorage.setItem(\"todoList\", JSON.stringify(newList));\n    }\n\n    useEffect(() =>{\n        if(localStorage.getItem(\"todoList\")){\n            const list = JSON.parse(localStorage.getItem(\"todoList\"));\n            setTodoList(list);\n        }\n\n    }, [])\n\n    return (\n        <div className=\"todo-container\">\n            <div className=\"input-container\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Enter todo\"\n                    className=\"input\" \n                    value={inputdata}\n                    onChange={(e) => setInputData(e.target.value)}\n                    onKeyDown={(event) =>handleEnterTodoAdd(event)}\n                />\n                {   isEdit ? (\n                        <button className=\"btn\" style={{backgroundColor: \"#1FAA59\"}} onClick={() => handleModifyTodo(inputdata, editId)}>Modify</button>\n                    ):(\n                        <button className=\"btn\" style={{backgroundColor: \"#1FAA59\"}} onClick={() =>handleTodoAdd()}>Add</button>\n                    )\n                }\n                <button className=\"btn\" style={{backgroundColor: \"#D82E2F\"}} onClick={() => handleDeleteAllTodo()}>Delete</button>\n            </div>\n            <div className=\"todo-list-container\">\n                {\n                    todoList.map((item) =>{\n                        return(\n                            <div className=\"todo-card\" key={item.id}>\n                                <h3 className=\"todo\">{item.data}</h3>\n                                <span className=\"icons\" onClick={()=> handleEditTodo(item.data, item.id)}><FaRegEdit style={{width: \"20px\", height: \"20px\"}}/></span>\n                                <span className=\"icons\" onClick={() => handleRemoveTodo(item.id)}><RiDeleteBinLine style={{width: \"20px\", height: \"20px\"}}/></span>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Todo\n","import React from \"react\";\nimport './App.css';\nimport Todo from \"./components/Todo\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <div className=\"title-container\">\n        <h1 className=\"title\">Todo Application</h1>\n      </div>\n      <Todo/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {TodoProvider} from \"./todoContext\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <TodoProvider>\n      <App />\n    </TodoProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}